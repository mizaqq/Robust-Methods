# -*- coding: utf-8 -*-
"""sobel.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1n3YMKZ-lK0NtOX8WeZRfVOd7AS92yd8s
"""

import cv2
import numpy as np
from google.colab.patches import cv2_imshow
# Load image in grayscale
img = cv2.imread('images.png', cv2.IMREAD_GRAYSCALE)

# Define Sobel kernels
Gx = np.array([[-1, 0, 1], [-2, 0, 2], [-1, 0, 1]])
Gy = np.array([[-1, -2, -1], [0, 0, 0], [1, 2, 1]])

img[3]



# Apply Sobel operator to image using NumPy
edge_x = np.abs(np.convolve(img.flatten(), Gx.flatten(), mode='same').reshape(img.shape))
edge_y = np.abs(np.convolve(img.flatten(), Gy.flatten(), mode='same').reshape(img.shape))


for x in range(0,255):
  for y in range(0,255):
    vGx=0;
    for( j=-1,j<=1;j++):
      for(i=-1;i<=1;i++):
        vgx+=j(x-i,y-j)*gx(i,j)

# Compute magnitude and direction of edges
mag = np.sqrt(edge_x ** 2 + edge_y ** 2)
angle = np.arctan2(edge_y, edge_x) * 180 / np.pi

# Display results
cv2_imshow(img)
cv2_imshow(edge_x)
cv2_imshow(edge_y)
cv2_imshow(mag)
cv2_imshow(angle)

